// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Voted extends ethereum.Event {
  get params(): Voted__Params {
    return new Voted__Params(this);
  }
}

export class Voted__Params {
  _event: Voted;

  constructor(event: Voted) {
    this._event = event;
  }

  get voter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get proposalIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Voting__getProposalsResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get voteCount(): BigInt {
    return this[1].toBigInt();
  }
}

export class Voting__proposalsResult {
  value0: string;
  value1: BigInt;

  constructor(value0: string, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getVoteCount(): BigInt {
    return this.value1;
  }
}

export class Voting extends ethereum.SmartContract {
  static bind(address: Address): Voting {
    return new Voting("Voting", address);
  }

  getProposals(): Array<Voting__getProposalsResultValue0Struct> {
    let result = super.call(
      "getProposals",
      "getProposals():((string,uint256)[])",
      [],
    );

    return result[0].toTupleArray<Voting__getProposalsResultValue0Struct>();
  }

  try_getProposals(): ethereum.CallResult<
    Array<Voting__getProposalsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getProposals",
      "getProposals():((string,uint256)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Voting__getProposalsResultValue0Struct>(),
    );
  }

  proposals(param0: BigInt): Voting__proposalsResult {
    let result = super.call(
      "proposals",
      "proposals(uint256):(string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Voting__proposalsResult(
      result[0].toString(),
      result[1].toBigInt(),
    );
  }

  try_proposals(param0: BigInt): ethereum.CallResult<Voting__proposalsResult> {
    let result = super.tryCall(
      "proposals",
      "proposals(uint256):(string,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Voting__proposalsResult(value[0].toString(), value[1].toBigInt()),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get proposalNames(): Array<string> {
    return this._call.inputValues[0].value.toStringArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class VoteCall extends ethereum.Call {
  get inputs(): VoteCall__Inputs {
    return new VoteCall__Inputs(this);
  }

  get outputs(): VoteCall__Outputs {
    return new VoteCall__Outputs(this);
  }
}

export class VoteCall__Inputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }

  get proposalIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class VoteCall__Outputs {
  _call: VoteCall;

  constructor(call: VoteCall) {
    this._call = call;
  }
}
